#!/bin/bash
set -eux

commits=$*

if [ -z "$(git config notes.rewriteRef)" ]; then
    echo "In order to preserve git's notes diring the rebases, please do:"
    echo "    git config notes.rewriteRef refs/notes/commits"
    exit 1
fi

current_dir=$(pwd)
temp_dir=$(mktemp -du)
github_user=$(git config --get github.user)
origin_url=$(git config --get remote.origin.url)
project=$(git config --get remote.origin.url|sed 's,/$,,'|sed 's,.*/,,'|sed 's,.git$,,')
upstream_full_name=$(curl -H "Authorization: token $GITHUB_TOKEN" -s https://api.github.com/repos/${github_user}/${project}|jq -r .source.full_name)
main_branch=$(curl -H "Authorization: token $GITHUB_TOKEN" -s https://api.github.com/repos/${upstream_full_name} | jq -r .default_branch)

if [ "${main_branch}" = "null" ]; then
    main_branch=master
fi
git clone $current_dir $temp_dir
cd $temp_dir
git fetch origin refs/notes/*:refs/notes/*
git remote add upstream ${origin_url}
git remote add remote_gh git@github.com:${github_user}/${project}
git fetch upstream

for commit in ${commits}; do
    target_branch=$(git notes show ${commit}|sed -n 's,^Public-Branch: ,,p')
    if [ -z "${target_branch}" ]; then
        target_branch=$(git log -n1 --pretty=format:%f ${commit})_${RANDOM}
        (
            cd $current_dir
            git notes add -m "Public-Branch: ${target_branch}" ${commit}
        )
    fi
    temp_branch=${target_branch}_${RANDOM}

    checkout_done=""
    for depends_on_pr in $(git log -1 --pretty='format:%b' ${commit}|sed -n "s,^Depends-On: https://github.com/${upstream_full_name}/pull/\\(.*\\),\\1,p"); do
        if [ -z "${checkout_done}" ]; then
            # If we've got a Depends-On: prefer to rebase our patch on the existing
            # branch. This way the parent commit will be EXACTLY the same and Zuul
            # won't be confused.
            hub pr checkout ${depends_on_pr}
            git branch -m ${temp_branch}
            checkout_done="yes"
        else
            hub am -3 https://github.com/${upstream_full_name}/pull/${depends_on_pr}
        fi
    done
    if [ -z "${checkout_done}" ]; then
        git checkout -B ${temp_branch} upstream/${main_branch}
    fi

    git cherry-pick ${commit}
    git push remote_gh -f ${temp_branch}:${target_branch}
    git log -1 --pretty='format:%s

%b' > /tmp/_my_pr_body.txt
    pr_url=$(hub pull-request -F /tmp/_my_pr_body.txt -b ${main_branch} --head ${github_user}:${target_branch}||true)
    if [ ! -z "${pr_url}" ]; then
        (
            cd $current_dir
            git notes append -m "PR-Url: ${pr_url}" ${commit}
        )
    fi
done
rm -rf ${temp_dir}
